package com.org.tree.red.black;


/**
 * 红黑树
 *  普通的搜索树面对的问题
 *    普通的二叉搜索树作为数据存储工具的重要优势：可以快速地找到一个给定关键字的数据项，
 *    并且可以快速的插入和删除数据项。其他的数据存储结构，例如数组，有序数组以及链表，执行
 *    这些操作却很慢。因此，二叉树似乎是理想的数据存储结构。
 *   遗憾的是 二叉搜索树有一个很麻烦的问题。如果树中插入的是随机的数据，则执行效率很好。
 *   但是，如果插入的是有序的数据，或者逆序的数据，速度就会变的很慢。因为当插入的数值有序时候
 *   ，二叉树就是非平衡的了。而对于非平衡树，它的快速查找（插入、删除）指定数据项的能力就丧失了。
 *
 *    红-黑树，解决非平衡树问题的方法，它增加了某些特点的二叉搜索树。
 *     还有其他的一些方法来保证书的平衡。
 *
 *
 * */
public class RedBlackTree {
}
